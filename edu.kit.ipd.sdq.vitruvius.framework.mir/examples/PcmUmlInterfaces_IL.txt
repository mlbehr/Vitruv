map repo.repository.OperationInterface as oi
 and uml.Interface as ui {
 	when java "predicate test"
 	where java "initializer test"
 	
 	with oi.signatures__OperationInterface[repo.repository.OperationSignature] as ois
 	  and ui.ownedOperation[uml.Operation] as uioo {
		with ois.returnType__OperationSignature[repo.repository.DataType] as oisrt
		  and uioo.ownedParameter[uml.Parameter].^type[uml.DataType] as uiooop {
		  	where java "..."
		}
		with ois.parameters__OperationSignature[repo.repository.Parameter] as oisp
		  and uioo.ownedParameter[uml.Parameter] as uiooop {
		  	where java "..."
		}
 	}
}

map repo.repository.Repository as pr
 and uml.Package as up {
	with pr.interfaces__Repository and up.member
}

Predicates = [
	JavaPredicate #p1 [ "predicate test" ],
	
	RFCWECl #p2 [
		FEClCorr. [ uml.Interface, signatures_OperationInterface: OperationSignature ]],
	RFCWECl #p3 [
		FEClCorr. [ uml.Operation, returnType_OperationSignature: DataType ],
		FEClCorr. [ uml.Interface, signatures_OperationInterface: OperationSignature ]],
	RFCWECl #p4 [
		FEClCorr. [ uml.Operation, parameters_OperationSignature: Parameter ],
		FEClCorr. [ uml.Interface, signatures_OperationInterface: OperationSignature ]],
	RFCWECl #p5 [
		FEClCorr. [ uml.Package, interfaces_Repository: Interface ]],
]

ClassifierMapping #c1 [ Left = OperationSignature, Predicates = #p2, Right = Operation ]
ClassifierMapping #c2 [ Left = repo.DataType, Predicate = #p3, Right = uml.DataType
	initializer = [ JavaInitializer [ CallStatement = "..." ] ] ]
** ClassifierMapping #c2 [ Left = repo.DataType, Predicate = #p3, Right = uml.Parameter
	initializer = [ JavaInitializer [ CallStatement = "..." ] ] ]
	
ClassifierMapping #c3 [ Left = repo.Parameter, Predicate = #p4, Right = uml.Parameter
	initializer = [ JavaInitializer [ CallStatement = "..." ] ] ]
ClassifierMapping #c4 [ Left = repo.OperationInterface, Predicates = #p1, Right = uml.Interface
	initializer = [ JavaInitializer [ "initializer test" ] ] ]
	
ClassifierMapping #c5 [ Left = repo.Interface, Predicates = #p5, Right = uml.NamedElement ]
ClassifierMapping #c6 [ Left = Repository, Predicates =, Right = Package ]

FeatureMapping #f1 [
	left  = ECl.Ft. [ repo.OperationInterface, signatures_OperationInterface: OperationSignature ],
	right = ECl.Ft. [ uml.Interface, ownedOperation: Operation ] ]
FeatureMapping #f2 [
	left  = ECl.Ft. [ repo.OperationSignature, returnType_OperationSignature: DataType ],
**  right = ECl.Ft. [ uml.Operation, [ownedParameter:uml.Parameter, type:uml.DataType] ] ]
FeatureMapping #f3 [
	left  = ECl.Ft. [ repo.OperationSignature, parameters_OperationSignature: Parameter ],
	right = ECl.Ft. [ uml.Operation, ownedParameter: Parameter ] ]
FeatureMapping #f4 [
	left  = ECl.Ft. [ repo.Interface, interfaces_Repository: Interface ],
	right = ECl.Ft. [ uml.NamedElement, member: NamedElement ] ]
	
	
=== RÃœCKRICHTUNG ===

with ois.returnType__OperationSignature[repo.repository.DataType] as oisrt
  and uioo.ownedParameter[uml.Parameter].^type[uml.DataType] as uiooop {
  	where java "..."
}

ClassifierMapping #c21 [ Left = uml.Interface, Right = repo.OperationInterface ]
ClassifierMapping #c22 [ Left = uml.Operation, Right = repo.OperationSignature ]
FeatureMapping #f21 [
	Left = [ uml.Interface, ownedOperation: Operation],
	Right = [ repo.OperationInterface, signatures_OperationInterface: OperationSignature ] ]
ClassifierMapping #c23 [ Left = uml.Parameter, right = repo.DataType ]
ClassifierMapping #c24 [ Left = uml.DataType, right = repo.DataType ]
FeatureMapping #f22 [
	Left = [ uml.Operation, [ownedParameter:uml.Parameter, type:uml.DataType ] ],
	Right = [ repo.OperationSignature, returnType_OperationSignature: DataType ] ]

ClassifierMapping #c25 [ Left = uml.Parameter, right = repo.Parameter ]
ClassifierMapping #c26 [ Left = uml.Interface, right = repo.OperationInterface ]

ClassifierMapping #c27 [ Left = uml.NamedElement, right = repo.Interface ]
ClassifierMapping #c28 [ Left = uml.Package, right = repo.Repository ]