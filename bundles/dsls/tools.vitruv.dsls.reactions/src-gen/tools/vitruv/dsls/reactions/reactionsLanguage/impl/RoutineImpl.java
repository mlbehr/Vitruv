/**
 * generated by Xtext 2.10.0
 */
package tools.vitruv.dsls.reactions.reactionsLanguage.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EcoreUtil;

import tools.vitruv.dsls.reactions.reactionsLanguage.Action;
import tools.vitruv.dsls.reactions.reactionsLanguage.Matcher;
import tools.vitruv.dsls.reactions.reactionsLanguage.ReactionsLanguagePackage;
import tools.vitruv.dsls.reactions.reactionsLanguage.ReactionsSegment;
import tools.vitruv.dsls.reactions.reactionsLanguage.ReturnStatement;
import tools.vitruv.dsls.reactions.reactionsLanguage.Routine;
import tools.vitruv.dsls.reactions.reactionsLanguage.RoutineInput;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Routine</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link tools.vitruv.dsls.reactions.reactionsLanguage.impl.RoutineImpl#getName <em>Name</em>}</li>
 *   <li>{@link tools.vitruv.dsls.reactions.reactionsLanguage.impl.RoutineImpl#getInput <em>Input</em>}</li>
 *   <li>{@link tools.vitruv.dsls.reactions.reactionsLanguage.impl.RoutineImpl#getMatcher <em>Matcher</em>}</li>
 *   <li>{@link tools.vitruv.dsls.reactions.reactionsLanguage.impl.RoutineImpl#getAction <em>Action</em>}</li>
 *   <li>{@link tools.vitruv.dsls.reactions.reactionsLanguage.impl.RoutineImpl#getReturn <em>Return</em>}</li>
 *   <li>{@link tools.vitruv.dsls.reactions.reactionsLanguage.impl.RoutineImpl#getReactionsSegment <em>Reactions Segment</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RoutineImpl extends MinimalEObjectImpl.Container implements Routine
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getInput() <em>Input</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInput()
   * @generated
   * @ordered
   */
  protected RoutineInput input;

  /**
   * The cached value of the '{@link #getMatcher() <em>Matcher</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMatcher()
   * @generated
   * @ordered
   */
  protected Matcher matcher;

  /**
   * The cached value of the '{@link #getAction() <em>Action</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAction()
   * @generated
   * @ordered
   */
  protected Action action;

  /**
   * The cached value of the '{@link #getReturn() <em>Return</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReturn()
   * @generated
   * @ordered
   */
  protected ReturnStatement return_;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RoutineImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ReactionsLanguagePackage.Literals.ROUTINE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ReactionsLanguagePackage.ROUTINE__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RoutineInput getInput()
  {
    return input;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetInput(RoutineInput newInput, NotificationChain msgs)
  {
    RoutineInput oldInput = input;
    input = newInput;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ReactionsLanguagePackage.ROUTINE__INPUT, oldInput, newInput);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setInput(RoutineInput newInput)
  {
    if (newInput != input)
    {
      NotificationChain msgs = null;
      if (input != null)
        msgs = ((InternalEObject)input).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ReactionsLanguagePackage.ROUTINE__INPUT, null, msgs);
      if (newInput != null)
        msgs = ((InternalEObject)newInput).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ReactionsLanguagePackage.ROUTINE__INPUT, null, msgs);
      msgs = basicSetInput(newInput, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ReactionsLanguagePackage.ROUTINE__INPUT, newInput, newInput));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Matcher getMatcher()
  {
    return matcher;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMatcher(Matcher newMatcher, NotificationChain msgs)
  {
    Matcher oldMatcher = matcher;
    matcher = newMatcher;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ReactionsLanguagePackage.ROUTINE__MATCHER, oldMatcher, newMatcher);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMatcher(Matcher newMatcher)
  {
    if (newMatcher != matcher)
    {
      NotificationChain msgs = null;
      if (matcher != null)
        msgs = ((InternalEObject)matcher).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ReactionsLanguagePackage.ROUTINE__MATCHER, null, msgs);
      if (newMatcher != null)
        msgs = ((InternalEObject)newMatcher).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ReactionsLanguagePackage.ROUTINE__MATCHER, null, msgs);
      msgs = basicSetMatcher(newMatcher, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ReactionsLanguagePackage.ROUTINE__MATCHER, newMatcher, newMatcher));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Action getAction()
  {
    return action;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAction(Action newAction, NotificationChain msgs)
  {
    Action oldAction = action;
    action = newAction;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ReactionsLanguagePackage.ROUTINE__ACTION, oldAction, newAction);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAction(Action newAction)
  {
    if (newAction != action)
    {
      NotificationChain msgs = null;
      if (action != null)
        msgs = ((InternalEObject)action).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ReactionsLanguagePackage.ROUTINE__ACTION, null, msgs);
      if (newAction != null)
        msgs = ((InternalEObject)newAction).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ReactionsLanguagePackage.ROUTINE__ACTION, null, msgs);
      msgs = basicSetAction(newAction, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ReactionsLanguagePackage.ROUTINE__ACTION, newAction, newAction));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ReturnStatement getReturn()
  {
    return return_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetReturn(ReturnStatement newReturn, NotificationChain msgs)
  {
    ReturnStatement oldReturn = return_;
    return_ = newReturn;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ReactionsLanguagePackage.ROUTINE__RETURN, oldReturn, newReturn);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setReturn(ReturnStatement newReturn)
  {
    if (newReturn != return_)
    {
      NotificationChain msgs = null;
      if (return_ != null)
        msgs = ((InternalEObject)return_).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ReactionsLanguagePackage.ROUTINE__RETURN, null, msgs);
      if (newReturn != null)
        msgs = ((InternalEObject)newReturn).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ReactionsLanguagePackage.ROUTINE__RETURN, null, msgs);
      msgs = basicSetReturn(newReturn, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ReactionsLanguagePackage.ROUTINE__RETURN, newReturn, newReturn));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ReactionsSegment getReactionsSegment()
  {
    if (eContainerFeatureID() != ReactionsLanguagePackage.ROUTINE__REACTIONS_SEGMENT) return null;
    return (ReactionsSegment)eInternalContainer();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetReactionsSegment(ReactionsSegment newReactionsSegment, NotificationChain msgs)
  {
    msgs = eBasicSetContainer((InternalEObject)newReactionsSegment, ReactionsLanguagePackage.ROUTINE__REACTIONS_SEGMENT, msgs);
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setReactionsSegment(ReactionsSegment newReactionsSegment)
  {
    if (newReactionsSegment != eInternalContainer() || (eContainerFeatureID() != ReactionsLanguagePackage.ROUTINE__REACTIONS_SEGMENT && newReactionsSegment != null))
    {
      if (EcoreUtil.isAncestor(this, newReactionsSegment))
        throw new IllegalArgumentException("Recursive containment not allowed for " + toString());
      NotificationChain msgs = null;
      if (eInternalContainer() != null)
        msgs = eBasicRemoveFromContainer(msgs);
      if (newReactionsSegment != null)
        msgs = ((InternalEObject)newReactionsSegment).eInverseAdd(this, ReactionsLanguagePackage.REACTIONS_SEGMENT__ROUTINES, ReactionsSegment.class, msgs);
      msgs = basicSetReactionsSegment(newReactionsSegment, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ReactionsLanguagePackage.ROUTINE__REACTIONS_SEGMENT, newReactionsSegment, newReactionsSegment));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ReactionsLanguagePackage.ROUTINE__REACTIONS_SEGMENT:
        if (eInternalContainer() != null)
          msgs = eBasicRemoveFromContainer(msgs);
        return basicSetReactionsSegment((ReactionsSegment)otherEnd, msgs);
    }
    return super.eInverseAdd(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ReactionsLanguagePackage.ROUTINE__INPUT:
        return basicSetInput(null, msgs);
      case ReactionsLanguagePackage.ROUTINE__MATCHER:
        return basicSetMatcher(null, msgs);
      case ReactionsLanguagePackage.ROUTINE__ACTION:
        return basicSetAction(null, msgs);
      case ReactionsLanguagePackage.ROUTINE__RETURN:
        return basicSetReturn(null, msgs);
      case ReactionsLanguagePackage.ROUTINE__REACTIONS_SEGMENT:
        return basicSetReactionsSegment(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eBasicRemoveFromContainerFeature(NotificationChain msgs)
  {
    switch (eContainerFeatureID())
    {
      case ReactionsLanguagePackage.ROUTINE__REACTIONS_SEGMENT:
        return eInternalContainer().eInverseRemove(this, ReactionsLanguagePackage.REACTIONS_SEGMENT__ROUTINES, ReactionsSegment.class, msgs);
    }
    return super.eBasicRemoveFromContainerFeature(msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ReactionsLanguagePackage.ROUTINE__NAME:
        return getName();
      case ReactionsLanguagePackage.ROUTINE__INPUT:
        return getInput();
      case ReactionsLanguagePackage.ROUTINE__MATCHER:
        return getMatcher();
      case ReactionsLanguagePackage.ROUTINE__ACTION:
        return getAction();
      case ReactionsLanguagePackage.ROUTINE__RETURN:
        return getReturn();
      case ReactionsLanguagePackage.ROUTINE__REACTIONS_SEGMENT:
        return getReactionsSegment();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ReactionsLanguagePackage.ROUTINE__NAME:
        setName((String)newValue);
        return;
      case ReactionsLanguagePackage.ROUTINE__INPUT:
        setInput((RoutineInput)newValue);
        return;
      case ReactionsLanguagePackage.ROUTINE__MATCHER:
        setMatcher((Matcher)newValue);
        return;
      case ReactionsLanguagePackage.ROUTINE__ACTION:
        setAction((Action)newValue);
        return;
      case ReactionsLanguagePackage.ROUTINE__RETURN:
        setReturn((ReturnStatement)newValue);
        return;
      case ReactionsLanguagePackage.ROUTINE__REACTIONS_SEGMENT:
        setReactionsSegment((ReactionsSegment)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ReactionsLanguagePackage.ROUTINE__NAME:
        setName(NAME_EDEFAULT);
        return;
      case ReactionsLanguagePackage.ROUTINE__INPUT:
        setInput((RoutineInput)null);
        return;
      case ReactionsLanguagePackage.ROUTINE__MATCHER:
        setMatcher((Matcher)null);
        return;
      case ReactionsLanguagePackage.ROUTINE__ACTION:
        setAction((Action)null);
        return;
      case ReactionsLanguagePackage.ROUTINE__RETURN:
        setReturn((ReturnStatement)null);
        return;
      case ReactionsLanguagePackage.ROUTINE__REACTIONS_SEGMENT:
        setReactionsSegment((ReactionsSegment)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ReactionsLanguagePackage.ROUTINE__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case ReactionsLanguagePackage.ROUTINE__INPUT:
        return input != null;
      case ReactionsLanguagePackage.ROUTINE__MATCHER:
        return matcher != null;
      case ReactionsLanguagePackage.ROUTINE__ACTION:
        return action != null;
      case ReactionsLanguagePackage.ROUTINE__RETURN:
        return return_ != null;
      case ReactionsLanguagePackage.ROUTINE__REACTIONS_SEGMENT:
        return getReactionsSegment() != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //RoutineImpl
