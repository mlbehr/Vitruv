/**
 * generated by Xtext 2.10.0
 */
package tools.vitruv.dsls.reactions.reactionsLanguage.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import tools.vitruv.dsls.reactions.reactionsLanguage.ExecutionCodeBlock;
import tools.vitruv.dsls.reactions.reactionsLanguage.ExistingElementReference;
import tools.vitruv.dsls.reactions.reactionsLanguage.ReactionsLanguagePackage;
import tools.vitruv.dsls.reactions.reactionsLanguage.UpdateModelElement;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Update Model Element</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link tools.vitruv.dsls.reactions.reactionsLanguage.impl.UpdateModelElementImpl#getElement <em>Element</em>}</li>
 *   <li>{@link tools.vitruv.dsls.reactions.reactionsLanguage.impl.UpdateModelElementImpl#getUpdateBlock <em>Update Block</em>}</li>
 * </ul>
 *
 * @generated
 */
public class UpdateModelElementImpl extends ActionStatementImpl implements UpdateModelElement
{
  /**
   * The cached value of the '{@link #getElement() <em>Element</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getElement()
   * @generated
   * @ordered
   */
  protected ExistingElementReference element;

  /**
   * The cached value of the '{@link #getUpdateBlock() <em>Update Block</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUpdateBlock()
   * @generated
   * @ordered
   */
  protected ExecutionCodeBlock updateBlock;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected UpdateModelElementImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ReactionsLanguagePackage.Literals.UPDATE_MODEL_ELEMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ExistingElementReference getElement()
  {
    return element;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetElement(ExistingElementReference newElement, NotificationChain msgs)
  {
    ExistingElementReference oldElement = element;
    element = newElement;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ReactionsLanguagePackage.UPDATE_MODEL_ELEMENT__ELEMENT, oldElement, newElement);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setElement(ExistingElementReference newElement)
  {
    if (newElement != element)
    {
      NotificationChain msgs = null;
      if (element != null)
        msgs = ((InternalEObject)element).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ReactionsLanguagePackage.UPDATE_MODEL_ELEMENT__ELEMENT, null, msgs);
      if (newElement != null)
        msgs = ((InternalEObject)newElement).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ReactionsLanguagePackage.UPDATE_MODEL_ELEMENT__ELEMENT, null, msgs);
      msgs = basicSetElement(newElement, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ReactionsLanguagePackage.UPDATE_MODEL_ELEMENT__ELEMENT, newElement, newElement));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ExecutionCodeBlock getUpdateBlock()
  {
    return updateBlock;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetUpdateBlock(ExecutionCodeBlock newUpdateBlock, NotificationChain msgs)
  {
    ExecutionCodeBlock oldUpdateBlock = updateBlock;
    updateBlock = newUpdateBlock;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ReactionsLanguagePackage.UPDATE_MODEL_ELEMENT__UPDATE_BLOCK, oldUpdateBlock, newUpdateBlock);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setUpdateBlock(ExecutionCodeBlock newUpdateBlock)
  {
    if (newUpdateBlock != updateBlock)
    {
      NotificationChain msgs = null;
      if (updateBlock != null)
        msgs = ((InternalEObject)updateBlock).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ReactionsLanguagePackage.UPDATE_MODEL_ELEMENT__UPDATE_BLOCK, null, msgs);
      if (newUpdateBlock != null)
        msgs = ((InternalEObject)newUpdateBlock).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ReactionsLanguagePackage.UPDATE_MODEL_ELEMENT__UPDATE_BLOCK, null, msgs);
      msgs = basicSetUpdateBlock(newUpdateBlock, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ReactionsLanguagePackage.UPDATE_MODEL_ELEMENT__UPDATE_BLOCK, newUpdateBlock, newUpdateBlock));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ReactionsLanguagePackage.UPDATE_MODEL_ELEMENT__ELEMENT:
        return basicSetElement(null, msgs);
      case ReactionsLanguagePackage.UPDATE_MODEL_ELEMENT__UPDATE_BLOCK:
        return basicSetUpdateBlock(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ReactionsLanguagePackage.UPDATE_MODEL_ELEMENT__ELEMENT:
        return getElement();
      case ReactionsLanguagePackage.UPDATE_MODEL_ELEMENT__UPDATE_BLOCK:
        return getUpdateBlock();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ReactionsLanguagePackage.UPDATE_MODEL_ELEMENT__ELEMENT:
        setElement((ExistingElementReference)newValue);
        return;
      case ReactionsLanguagePackage.UPDATE_MODEL_ELEMENT__UPDATE_BLOCK:
        setUpdateBlock((ExecutionCodeBlock)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ReactionsLanguagePackage.UPDATE_MODEL_ELEMENT__ELEMENT:
        setElement((ExistingElementReference)null);
        return;
      case ReactionsLanguagePackage.UPDATE_MODEL_ELEMENT__UPDATE_BLOCK:
        setUpdateBlock((ExecutionCodeBlock)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ReactionsLanguagePackage.UPDATE_MODEL_ELEMENT__ELEMENT:
        return element != null;
      case ReactionsLanguagePackage.UPDATE_MODEL_ELEMENT__UPDATE_BLOCK:
        return updateBlock != null;
    }
    return super.eIsSet(featureID);
  }

} //UpdateModelElementImpl
