grammar edu.kit.ipd.sdq.xocl4inv.eval.XoclEvalDSL with org.eclipse.xtext.xbase.Xbase

import "http://www.eclipse.org/xtext/xbase/Xbase" as xbase
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://www.eclipse.org/xtext/common/JavaVMTypes" as types
generate xoclEvalDSL "http://sdq.ipd.kit.edu/xocl4inv/eval/XoclEval"

Model returns ModelFile:
	imports+=Import*
	
	(
		(xbaseocls+=XbaseOclTest) |
		(transformations+=TransformationTest) |
		(invariants+=Invariant)
	)*;

Import returns Import:
	'import' package=[ecore::EPackage|STRING] 'as' name=ID;

XbaseOclTest returns XbaseOclTest:
	'xbaseocl' name=ID
	'context' context=[ecore::EClass|QualifiedName]
	'input' input=XExpression
	'xbase' xbase=XExpression
	'ocl' ocl=STRING;
	
	
TransformationTest returns TransformationTest:
	'transform' name=ID
	'invariant' invariant=[Invariant]
	'param' parameter=STRING
	'input' input=XExpression
	'output' output=XExpression
;
	
Invariant returns Invariant:
	'invariant' name=ValidID
	(
		'('
			parameters+=InvariantParam
			(',' parameters+=InvariantParam)*
		')'
	)?
	'context' context=[ecore::EClass|QualifiedName]
	'check' expression=XExpression
;

InvariantParam returns InvariantParameter:
	type=[ecore::EClass|QualifiedName]
	name=ValidID
;
